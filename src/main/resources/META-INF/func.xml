<idea-plugin>
    <extensions defaultExtensionNs="com.intellij">
        <fileType name="func"
                  implementationClass="org.ton.intellij.func.FuncFileType"
                  fieldName="INSTANCE"
                  language="func"
                  extensions="fc;func"
        />

        <lang.parserDefinition language="func"
                               implementationClass="org.ton.intellij.func.parser.FuncParserDefinition"/>
        <lang.syntaxHighlighterFactory language="func" implementationClass="org.ton.intellij.func.highlighting.FuncSyntaxHighlighterFactory"/>
        <lang.commenter language="func" implementationClass="org.ton.intellij.func.FuncCommenter"/>
        <lang.braceMatcher language="func" implementationClass="org.ton.intellij.func.FuncBraceMatcher"/>
        <lang.foldingBuilder language="func" implementationClass="org.ton.intellij.func.ide.FuncFoldingBuilder"/>
        <lang.findUsagesProvider language="func"
                                 implementationClass="org.ton.intellij.func.ide.FuncFindUsagesProvider"/>

        <stubElementTypeHolder class="org.ton.intellij.func.psi.FuncElementTypes" externalIdPrefix="func."/>

        <annotator language="func" implementationClass="org.ton.intellij.func.highlighting.FuncAnnotator"/>

        <localInspection language="func" displayName="Unused function inspection" groupPath="FunC"
                         groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
                         implementationClass="org.ton.intellij.func.inspection.FuncUnusedFunctionInspection"/>

        <!-- control flow issues -->
        <localInspection language="func" displayName="Missing return at end of function" groupPath="FunC"
                         groupName="Control flow issues" enabledByDefault="true" level="ERROR"
                         implementationClass="org.ton.intellij.func.inspection.FuncMissingReturnInspection"/>
    </extensions>

    <actions>
        <action id="func.new_func_file" class="org.ton.intellij.func.action.file.FuncCreateFileAction"
                text="FunC File" description="Create new FunC file">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewXml"/>
        </action>
    </actions>
</idea-plugin>
